name: Build for rustup Doc

on:
  # push:
  #   branches:
  #     - master
  schedule:
    - cron: '10 6 * * *'
  workflow_dispatch:
  repository_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2
      - name: Install mdbook
        uses: actions-rs/install@v0.1
        with:
          crate: mdbook
          version: latest
          use-tool-cache: true
      - name: Clone rustup doc
        run: git clone https://x-access-token:${GITHUB_TOKEN}@github.com/rust-lang/rustup.git rustup-en
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: init oss config
        uses: yizhoumo/setup-ossutil@v1
        with:
          ossutil-version: '1.7.3'
          endpoint: ${{secrets.OSS_ENDPOINT}}
          access-key-id: ${{secrets.OSS_ID}}
          access-key-secret: ${{secrets.OSS_SECRET}}
          sts-token: ""
      - name: Build rustup book
        run: |
          # Build rustup book
          mkdir -pv rustup-archive/{en,zh}
          cd rustup-en/src/doc && \
            mdbook build && \
            cp -ar book/* ../../../rustup-archive/en/

          # Upload to oss
          ls -alhtr && \
            cd .. && \
            ossutil sync rustup-archive/ oss://${{ secrets.OSS_BUCKET }}/rustup/ -f --delete
      - name: Sending Build Status
        if: always()
        env:
          DINGTALK_ACCESS_TOKEN: ${{ secrets.DINGTALK_ACCESS_TOKEN }}
          DINGTALK_SECRET: ${{ secrets.DINGTALK_SECRET }}
          JOB_STATE: ${{ job.status }}
          RUNNER_OS: ${{ runner.os }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_WORKFLOW: ${{ env.GITHUB_WORKFLOW }}
        run: python3 notify.py
